private void log(String activityname) {
        try {

            String fileName = Environment.getExternalStorageDirectory() + "/kqc.txt";
            File file = new File(fileName);
            if (!file.exists()) {
                file.createNewFile();
            } else {
                BufferedReader reader = new BufferedReader(new FileReader(file));

                StringBuilder sb = new StringBuilder();
                String str = "";
                while ((str = reader.readLine()) != null) {
                    sb.append(str);
                }
                Log.e("ititit", str);

            }

            FileOutputStream fileOutputStream = new FileOutputStream(file, true);
            BufferedOutputStream buff = new BufferedOutputStream(fileOutputStream);


            Intent it = getIntent();

            String className = "";

            Class clazzIt = it.getClass();
            Field[] fsIT = clazzIt.getDeclaredFields();
            if (fsIT != null) {
                for (Field f : fsIT) {
                    f.setAccessible(true);
                    if ("mComponent".equals(f.getName())) {
                        try {
                            ComponentName componentName = (ComponentName) f.get(it);

                            className = componentName.flattenToShortString().replace("/", "");

                        } catch (IllegalAccessException e) {
                            e.printStackTrace();
                        }
                    }
                }
            }
            Log.e("itititit", activityname + "--" + className);

            if (TextUtils.isEmpty(activityname)) {
                activityname = "添加activity的标题";
            }

            List<AnalyActivity> allList = new ArrayList<>();
            AnalyActivity activity = new AnalyActivity();
            activity.setActivityClass(className);
            activity.setActivityName(activityname);

            Bundle b = it.getExtras();
            List<Params> list = new ArrayList<>();
            if (b != null) {
                Class clazz = b.getClass();
                Field[] fs = clazz.getDeclaredFields();
                if (fs != null) {
                    for (Field f : fs) {
                        f.setAccessible(true);
                        if ("mMap".equals(f.getName())) {


                            ArrayMap<String, Object> mMap = (ArrayMap<String, Object>) f.get(b);

                            Set<String> keys = mMap.keySet();
                            Params p = null;
                            for (String s : keys) {

                                p = new Params();
                                p.setKeyName(s);
                                p.setKeyType(mMap.get(s).getClass().getName());
                                p.setKeyDescribe("写下对该参数的描述");

                                if (p.getKeyType().startsWith("com.kqc.b2b")) {
                                    List<Params> mList = new ArrayList<>();
                                    Class modelClass = Class.forName(p.getKeyType());
                                    Field[] modelFidlds = modelClass.getDeclaredFields();
                                    Params mParms = null;
                                    for (Field ff : modelFidlds) {
                                        ff.setAccessible(true);
                                        mParms = new Params();
                                        mParms.setKeyDescribe("写下对该参数的描述");
                                        mParms.setKeyName(ff.getName());
                                        mParms.setKeyType(ff.getType().toString());
                                        mList.add(mParms);
                                    }
                                    p.setKeyValue(mList);
                                }

                                list.add(p);
                            }


                        }
                    }
                }
            }

            activity.setParams(list);
            allList.add(activity);

            buff.write(JSON.toJSONString(allList).getBytes());


            buff.flush();
            buff.close();


        } catch (Exception e) {

            Log.e("itititit", e.toString() + e.getLocalizedMessage());
        }


    }


    public boolean isRunningForeground(Context context){
        ActivityManager am = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
        ComponentName cn = am.getRunningTasks(1).get(0).topActivity;
        String currentPackageName = cn.getPackageName();
        if(currentPackageName != null && currentPackageName.equals(getPackageName())){
            return true;
        }
        return false;
    }


    package com.kqc.b2b.push;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.text.TextUtils;
import android.util.Log;


/**
 * 在此写用途
 *
 * @version V1.0 <描述当前版本功能>
 * @FileName: com.kqc.b2b.push.LuckyMoneyReceiver
 * @author: shenjun@kuaiqiangche.com
 * @date: 16/10/26 16:33
 */
public class LuckyMoneyReceiver extends BroadcastReceiver {

    public static final String JSON_KEY_CODE = "code";
    public static final String JSON_KEY_DATA = "data";
    public static final String BUNDLE_CLIENT_ID = "clientid";
    public static final String BUNDLE_PAYLOAD = "payload";


    @Override
    public void onReceive(final Context context, Intent intent) {
        Log.d("---onReceive", "---LuckyMoneyReceiver----onReceive--------");


        Bundle bundle = intent.getExtras();

        byte[] payload = bundle.getByteArray(BUNDLE_PAYLOAD);
        if (payload != null) {
            String data = new String(payload);

            if (TextUtils.isEmpty(data)) {
                return;
            }

            Log.d("---onReceive", "---LuckyMoneyReceiver--" + data);


//            if (isRunningForeground(context)) {
                Log.d("---onReceive", "---LuckyMoneyReceiver----Foreground--------");


//                AlertDialog.Builder dialog = new AlertDialog.Builder(context);
//                View view = LayoutInflater.from(context).inflate(R.layout.view_luck_money_dialog, null);
//                dialog.setView(view);
//
//                AlertDialog mDialog = dialog.create();
//
//                mDialog.getWindow().setType(WindowManager.LayoutParams.TYPE_SYSTEM_ALERT);
//                mDialog.setCancelable(true);
//                mDialog.setCanceledOnTouchOutside(false);
//                mDialog.show();
                // 上面的写法在部分机型不适配，需要手动打开权限，所以用了下面的activity 实现

//                Intent it = new Intent(context, LuckyMoneyActivity.class);
//                it.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
//                context.startActivity(it);
//
//
//            } else {
//                Log.d("---onReceive", "---LuckyMoneyReceiver----Background--------");
//                NotificationManager notificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
//
//                NotificationCompat.Builder mBuilder = new NotificationCompat.Builder(context);
//
//                mBuilder.setContentTitle("测试标题")
//                        .setContentText("测试内容").setSmallIcon(R.drawable.push)
//                        .build();
//                notificationManager.notify(11, mBuilder.build());
//
//
//            }
        }
    }




}
11-02 13:37:56.746 24722-24860/com.cocoa.mixpaneltest V/MixpanelAPI.Messages: Successfully posted to https://api.mixpanel.com/track?ip=1:
                                                                              [{"event":"Integration","properties":{"$brand":"samsung","$bluetooth_version":"ble","$os_version":"4.4.2","$has_telephone":true,"$lib_version":"4.9.2","mp_lib":"Android","$app_version_string":"1.0","$app_build_number":1,"$has_nfc":true,"$wifi":true,"$manufacturer":"samsung","$screen_dpi":480,"$app_release":1,"$google_play_services":"missing","$screen_height":1920,"lib":"Android","distinct_id":"da7a79f72b454fc33eb33b1458d39194","token":"85053bf24bba75239b16a601d9387e17","$screen_width":1080,"$bluetooth_enabled":true,"$os":"Android","$carrier":"","$model":"SM-G900P","$app_version":"1.0"}},{"event":"MainActivity - onCreate called","properties":{"$bluetooth_version":"ble","$has_telephone":true,"Logged in":false,"$lib_version":"4.9.2","$has_nfc":true,"$screen_dpi":480,"$google_play_services":"missing","$screen_height":1920,"time":1478059358,"token":"da7a79f72b454fc33eb33b1458d39194","$screen_width":1080,"$bluetooth_enabled":true,"$app_version":"1.0","$brand":"samsung","$os_version":"4.4.2","mp_lib":"android","$app_version_string":"1.0","$app_build_number":1,"$wifi":true,"$manufacturer":"samsung","$app_release":1,"distinct_id":"39268908-3c5d-4508-8a40-df6ed49847c9","Gender":"Female","$os":"Android","$carrier":"","$model":"SM-G900P"}}] (Thread 4719)




onKPayDialogDismiss





{"type":"pocketMoney","money":"100","title":"\u7ea2\u5305\u6765\u4e86","text":"\u7ea2\u5305\u6765\u4e86"}
{"type":"voucher","number":"1","amount":"300","title":"\u4f18\u60e0\u5238\u6765\u4e86","text":"\u4f18\u60e0\u5238\u6765\u4e86"}


String idRes = "com.kqc.b2b" + ".R$id";
try {
    Class clazz = Class.forName(idRes);

    Field[] fields = clazz.getFields();
    Log.e("-----", fields.length + "");

    for (Field f : fields) {
//                int id = f.getInt(null);

        int id = getResources().getIdentifier(f.getName(),"id", getPackageName());  // f.getInt(new R.id());
//                Log.e("-----", id + "----");
//
//                int xxx = f.getInt(new R.id());

        View view = findViewById(id);
        setClick(view);

//                if(view!=null){
//                    Log.e("-----", view.toString() + "----");
//                }


    }

} catch (Exception e) {
    e.printStackTrace();
    Log.e("-----", e.toString() + "----");
}


    private void setClick(View view) {

        if (view == null) {
            return;
        }
        view.sendAccessibilityEvent(AccessibilityEvent.TYPE_VIEW_CLICKED);
        view.setAccessibilityDelegate(new View.AccessibilityDelegate() {
            public void sendAccessibilityEvent(View host, int eventType) {
                try {
                    Log.e("-----", host.getClass().getName() + "-------");
                    Method[] methods = host.getClass().getMethods();
                    for (Method m : methods) {
                        if (m.getName().equals("getText")) {
                            Object oo = m.invoke(host);
                            Log.e("-----", oo.toString() + "-------");

                        }
                    }


//                    Object o = f.get(host);
//
//                    Log.e("-----", o.toString() + "-------");


                } catch (Exception e) {
                    e.printStackTrace();
                    Log.e("-----", e.toString() + "-------");
                }


            }

        });

    }



injectDir---------
injectDir---------com.cocoa.mixpaneltest.AopUtil
injectDir---------stratAop
injectDir---------javassist.CannotCompileException: by javassist.bytecode.BadBytecode: stratAop (Ljava/lang/String;)V in com.cocoa.mixpaneltest.AopUtil: failed to resolve types
injectDir---------com.cocoa.mixpaneltest.H
injectDir---------onCreate
injectDir---------javassist.CannotCompileException: cannot find android.os.Bundle
injectDir---------com.cocoa.mixpaneltest.Logger
injectDir---------log
injectDir---------log
injectDir---------com.cocoa.mixpaneltest.MainActivity$1
injectDir---------onClick
injectDir---------javassist.CannotCompileException: cannot find android.view.View
injectDir---------com.cocoa.mixpaneltest.MainActivity$2
injectDir---------onTouch
injectDir---------javassist.CannotCompileException: cannot find android.view.View
injectDir---------com.cocoa.mixpaneltest.MainActivity
injectDir---------onCreate
injectDir---------javassist.CannotCompileException: cannot find android.os.Bundle



 @Override
            public void onActivityResumed(Activity activity) {
                View view = activity.findViewById(R.id.title);
                if (view != null) {
                    TextView tv = (TextView) view;
                    Log.e("-----", tv.getText() + "");
                } else {
                    Log.e("-----", "tv is null");
                }
            }

            @Override
            public void onActivityPaused(Activity activity) {
                View view = activity.findViewById(R.id.title);
                if (view != null) {
                    TextView tv = (TextView) view;
                    Log.e("-----", tv.getText() + "");
                } else {
                    Log.e("-----", "tv is null");
                }
            }


            
        String imgUrl = null;

        try {
            Object tag = img.getTag();
            if (tag != null) {
                GenericRequest request = (GenericRequest) tag;
                Class requestClass = request.getClass();
                Field modelField = requestClass.getDeclaredField("model");
                modelField.setAccessible(true);

                imgUrl = modelField.get(request).toString();
            }
        } catch (Exception e) {
            Log.e("---", e.toString());
        }




        