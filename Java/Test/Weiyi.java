public class Weiyi{

	public static void main(String[] args){


		// << 左位移相当于  乘以2的N次方，举例： A << B  == A *（2的B次方）  
		// >> 右位移相当于  除以2的N次	

		System.out.println(10<<2);  // 0000 1010 向左移2位  0010 1000  =  40 
		System.out.println(10>>3);  // 1
			

		// >>> 无符号右移，注意（没有无符号左移）

		// -5   == 1111 1111 1111 1111 1111 1111 1111 1011     536870911
		System.out.println(-5>>3);   //右移3位 用1补位 1111 1111 1111 1111 1111 1111 1111 1111 就是等于-1
		System.out.println(-5>>>3);  //右移3位 用0补位 0001 1111 1111 1111 1111 1111 1111 1111 就是等于536870911

		//(第一位0为正数，第一位1为负数)


		// & | 操作

		// 与运算符
		System.out.println("与运算符");

		System.out.println( 128& 129);  // 128

		// 129，转换成二进制就是10000001，而“b”的值是128，转换成二进制就是10000000
		// 与运算符的规律，只有所在位的两个位都是1，结果才是1
		// 10000001 =129
		// 10000000 =128
		//=10000000 =128


		System.out.println("或运算符");
		System.out.println( 128 | 129);  // 129
		// 129，转换成二进制就是10000001，而“b”的值是128，转换成二进制就是10000000
		// 或运算符的规律，所在位的两个位有一个是1，结果就是1
		// 10000001 =129
		// 10000000 =128
		//=10000001 =129

		//这个不是很理解
		System.out.println("非运算符");
		System.out.println( ~128 );  // 
		//非运算符的规则 如果位为0，结果是1，如果位为1，结果是0，
		

		//异或运算符
		System.out.println("异或运算符");
		System.out.println(15^2);  //13
		// 异或运算符规则 两个操作数的位中，相同则结果为0，不同则结果为1。
		// 00001111  =15
		// 00000010  =2
		// 00001101  =13

	}

}
